//Fill pending table at intial load
getPendingRequests();

//On click/change content fns for tabs
$('#pendingTab').click(getPendingRequests);
//$('#resolvedTab').click(getResolvedRequests);
//$('#employeeTab').click(getAllEmployees);

//Onclick for pending tab
function getPendingRequests() {
	console.log(requests)
}

//Onclick for resolved tab
function getResolvedRequests() {
	getRequests(2, 3)
}

//Callback: get/render requests
function getRequests(...types) {
	//Array to store potential multiple request sets
	let results = [];
	//Counter tracks iterations
	let count = 0;
	
	//Write initial table html to dom
	const hanger = $('#display');
	hanger.empty();

	hanger.append(`<table class='table'>
   <thead><tr> <th> Id # </th>
  <th> Amount </th> <th> For </th> <th> Date </th> </tr></thead> </table>`);

	// Append loading message
	$('table').append('<p id="load">Loading...<p>')
	
	//Get array of requests for each type requested
	// then add to results array
	types.forEach(t => {
		var settings = {
			"url": `http://localhost:8080/ExpenseReimbursementSystem/rest/ers/all/${t}`,
			"method": "GET",
			"timeout": 0,
		};
		//increase count
		count++;
		$.ajax(settings).done(function(response) {
			results = results.concat(response);
			//if/once all results have been processed, sort and print results
			if(count === types.length){
				const sorted = results.sort((a,b) => a.id - b.id);
						response.forEach(element => {
			$('table').prepend(`
	  <tr>
      <td>${element.id}</td>
      <td>$${element.amount}</td>
      <td>${element.rFor}</td>
      <td>${(new Date(element.date).toDateString())}</td>
	  </tr>
      `)
			}
		});
	})
}

//Render logic broken out into own fn
